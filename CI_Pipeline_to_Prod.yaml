name: 1.$(Rev:r)
trigger:
- none


resources:
- repo: self

stages:
- stage: Build_infrastracture
  jobs:
  - job: Build
    displayName: Download application from testing ECR and deploy to test EKS and perform tests
    pool: 
      vmImage: ubuntu-latest
    variables:
    - group: "ACCESS-VARIABLES"
    steps:
    - checkout: self
    - task: AzureKeyVault@2
      displayName: Connecting to Azure Key Vault
      inputs:
        azureSubscription: 'Azure subscription 1(dfcefdc0-4ded-42a0-933b-100fbb1721ed)'
        KeyVaultName: 'key-vault-gl'
        SecretsFilter: '*'
        RunAsPreJob: true
    - task: Bash@3
      displayName: Authentication to AWS
      inputs:
        targetType: 'inline'
        script: |
                aws configure set aws_access_key_id $(AWS-ACCESS-KEY-ID)
                aws configure set aws_secret_access_key $(AWS-SECRET-ACCESS-KEY)
                aws configure set default.region us-east-1

    - task: Bash@3
      displayName: Push application image to ECR
      inputs:
        targetType: 'inline'
        script: |
                #! /bin/bash
                export db_username=$(db-username-test)
                export db_password=$(db-password-test)
                export db_endpoint=$(db-testing-endpoint)
                aws configure set aws_access_key_id $(AWS-ACCESS-KEY-ID)
                aws configure set aws_secret_access_key $(AWS-SECRET-ACCESS-KEY)
                aws configure set default.region us-east-1
                aws eks --region us-east-1 update-kubeconfig --name testing
                cat << EOF > kube.yml
                ---
                apiVersion: v1
                kind: Pod
                metadata:
                  name: app
                  labels:
                    app: website
                spec:
                  containers:
                  - name: website
                    image: "$(ECR_URL_TESTING):latest"
                ---
                apiVersion: v1
                kind: Service
                metadata:
                  name: testenv-deploy
                spec:
                  type: LoadBalancer
                  selector:
                    app: website
                  ports:
                  - protocol: TCP
                    port: 80
                EOF
                kubectl apply -f kube.yml
                export LB_URL=$(kubectl describe services testenv-deploy | grep --text ".amazonaws.com$")
    - task: Bash@3
      displayName: Integration tests placeholder
      inputs: 
        targetType: 'inline'
        script: |
                #! /bin/bash
                curl LB_URL/root

    - task: Bash@3
      displayName: Opening Pull request to dev branch
      inputs: 
        targetType: 'inline'
        script: |
                #! /bin/bash
                az repos pr create --repository Project-GL --source-branch $(Build.SourceBranchName) --target-branch dev-test --output table --auto-complete true
                echo 'Pull request created!'
      env:
        AZURE_DEVOPS_EXT_PAT: $(PAT)